---
- name: "zellij | Ubuntu | Download Latest Version JSON"
  ansible.builtin.uri:
    url: https://api.github.com/repos/zellij-org/zellij/releases/latest
  register: zellij_latest_version_json
  changed_when: false

- name: "zellij | Ubuntu | Registering zellij Latest Release"
  ansible.builtin.set_fact:
    zellij_latest_release: "{{ zellij_latest_version_json.json.tag_name }}"

- name: "zellij | Ubuntu | Registering zellij Latest Version"
  ansible.builtin.set_fact:
    zellij_latest_version: "{{ zellij_latest_release.stdout|default('') }}"

- name: "zellij | Ubuntu | Getting version information"
  ansible.builtin.shell:
    cmd: |
      /usr/local/bin/zellij --version | cut -d ' ' -f 2
  register: current_zellij_version
  changed_when: false
  failed_when: false

- name: "zellij | Ubuntu | Registering zellij Current Version"
  ansible.builtin.set_fact:
    zellij_current_version: "v{{ current_zellij_version.stdout }}"

- name: "zellij | Ubuntu | Show current_zellij_version debug"
  ansible.builtin.debug:
    var: zellij_current_version

- name: "zellij | Ubuntu | Show zellij_latest_release debug"
  ansible.builtin.debug:
    var: zellij_latest_release

- name: "zellij | Ubuntu | Install"
  when: zellij_latest_release not in zellij_current_version|default('')
  block:
    - name: "zellij | Ubuntu | Define zellij_file"
      ansible.builtin.set_fact:
        zellij_file: "zellij-{{ ansible_machine }}-unknown-linux-musl"

    - name: "zellij | Ubuntu | Ensure clean download destination"
      ansible.builtin.file:
        path: "/tmp/{{ zellij_file }}.tar.gz"
        state: absent
      become: true

    - name: "zellij | Ubuntu | Downloading zellij Release"
      ansible.builtin.get_url:
        url: "https://github.com/zellij-org/zellij/releases/download/{{ zellij_latest_release }}/{{ zellij_file }}.tar.gz"
        dest: /tmp/
        mode: u=rwx,g=rx,o=rx
        force: true
      notify:
        - Cleanup zellij downloaded tar

    - name: "zellij | Ubuntu | Ensure clean extraction destination"
      ansible.builtin.file:
        path: "/tmp/zellij"
        state: absent
      become: true

    - name: "zellij | Ubuntu | Extract zellij tar file"
      ansible.builtin.unarchive:
        src: "/tmp/{{ zellij_file }}.tar.gz"
        dest: /tmp

    - name: "zellij | Ubuntu | Remove any current zellij installations"
      ansible.builtin.file:
        path: /usr/local/bin/zellij
        state: absent
      become: true

    - name: "zellij | Ubuntu | Install zellij"
      ansible.builtin.copy:
        remote_src: true
        src: /tmp/zellij
        dest: /usr/local/bin/
        owner: "{{ host_user }}"
        group: "{{ host_user }}"
        force: true
        mode: u=rwx,g=rx,o=rx
      become: true
      notify:
        - Remove extracted zellij directory

- name: "zellij | Ubuntu | Ensure zellij config directory exists"
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.config/zellij"
    state: directory
    mode: u=rwx,g=rx,o=rx

- name: "zellij | Ubuntu | Copy config"
  ansible.builtin.copy:
    dest: "{{ ansible_user_dir }}/.config/zellij/config.yml"
    src: "config.kdl"
    mode: u=rwx,g=rx,o=rx
